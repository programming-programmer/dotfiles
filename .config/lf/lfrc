#Basic Settings
set hidden true
set scrolloff 8
set cursorpreviewfmt "\033[7m"

# Load file
cmd load-config ${{
    lf -remote "send $id source ~/.config/lf/lfrc"
}}

# Open file
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
    # Audio
	audio/*|video/x-ms-asf) mpv --audio-display=no $f ;;

    # Text
    text/*|application/json|inode/x-empty|application/x-subrip) nvim $fx ;;

    # PDF, EPUB, VND
   	application/pdf|application/vnd.djvu|application/epub*) zathura $fx ;;

    # Image
   	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) imv-wayland $fx ;;

    # Video
	video/*) setsid -f mpv $f -quiet ;;
    esac
}}

# Custom Functions ---

# Make Directory
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

# Make File
cmd mkfile ${{
  printf "File Name: "
  read ans
  touch $ans
}}

# Dynamically set number of columns
cmd column-reload ${{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $w -le 160 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}}

# New Folder with selected items
cmd newfolder ${{
    set -f
    read newd
    printf "Directory name: "
    mkdir -- "$newd"
    mv -- $fx "$newd"
}}

# Unzip/untar based on extension
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *.tgz) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# On-cd ?? i dunno
cmd on-cd &{{
    # display git repository status in your prompt
    source /usr/share/git/completion/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=auto
    GIT_PS1_SHOWSTASHSTATE=auto
    GIT_PS1_SHOWUNTRACKEDFILES=auto
    GIT_PS1_SHOWUPSTREAM=auto
    git=$(__git_ps1 " (%s)") || true
    fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%d\033[0m\033[1m%f$git\033[0m"
    lf -remote "send $id set promptfmt \"$fmt\""
}}

# Unbind some bindings
map m
map d
map Z
map T
map C
map N
map y
map R
map A
map b
map B

# Basic Functions
map R load-config
map . set hidden!
map mf mkfile
map md mkdir
map N newfolder
map ez zip
map et tar
map D delete
map ee unarchive
map x cut
map y copy
map p paste
map <c-c> quit
map q quit

# Movement
map gg top
map gh cd ~
map gc cd ~/.config/
map gl cd ~/.local/
map gd cd ~/Downloads/
map gD cd ~/Desktop/
map gn cd ~/Notes/
