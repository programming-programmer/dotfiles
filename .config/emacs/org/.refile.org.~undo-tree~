(undo-tree-save-format-version . 1)
"929fb0c54873b189ac7e4abeeec77b698fa441f5"
[nil nil nil nil (25768 24692 491366 141000) 0 nil]
([nil nil ((1 . 6) (t . -1)) nil (25768 24692 491363 631000) 0 nil])
([nil nil ((6 . 8)) nil (25768 24692 491361 172000) 0 nil])
([nil nil ((8 . 9)) nil (25768 24692 491359 79000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) . -8) (undo-tree-id239 . -1) 9) nil (25768 24692 491356 85000) 0 nil])
([nil nil ((8 . 11)) nil (25768 24692 491351 738000) 0 nil])
([nil nil ((11 . 16)) nil (25768 24692 491349 311000) 0 nil])
([nil nil ((8 . 9) 7) nil (25768 24692 491346 946000) 0 nil])
([nil nil ((9 . 10)) nil (25768 24692 491344 176000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -9) (undo-tree-id238 . -1) 10) nil (25768 24692 491340 805000) 0 nil])
([nil nil ((1 . 2) 2) nil (25768 24692 491336 362000) 0 nil])
([nil nil ((1 . 11)) nil (25768 24692 491333 622000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t face org-document-title)) . -10) (undo-tree-id237 . -1) 11) nil (25768 24692 491330 436000) 0 nil])
([nil nil ((10 . 14)) nil (25768 24692 491325 970000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t face org-document-title)) . -11) (undo-tree-id234 . -1) (#("f" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t face org-document-title)) . -12) (undo-tree-id235 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t face org-document-title)) . -13) (undo-tree-id236 . -1) 14) nil (25768 24692 491321 967000) 0 nil])
([nil nil ((11 . 16)) nil (25768 24692 491311 663000) 0 nil])
([nil nil ((17 . 19) (17 . 18) 16) nil (25768 24692 491309 185000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -17) (undo-tree-id232 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -18) (undo-tree-id233 . -1) 19) nil (25768 24692 491304 987000) 0 nil])
([nil nil ((17 . 29)) nil (25768 24692 491298 690000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t face org-document-info)) . -28) (undo-tree-id231 . -1) 29) nil (25768 24692 491295 249000) 0 nil])
([nil nil ((28 . 36)) nil (25768 24692 491290 782000) 0 nil])
([nil nil ((36 . 38)) nil (25768 24692 491288 384000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t)) . -37) (undo-tree-id230 . -1) 38) nil (25768 24692 491285 480000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37 . 38) (#("
" 0 1 (fontified nil line-prefix "" wrap-prefix "")) . -60) (37 . 61)) nil (25768 24692 491280 655000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "" rear-nonsticky t)) . 37) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1)) nil (25768 24692 491275 437000) 0 nil])
([nil nil ((59 . 60) 37) nil (25768 24692 491231 110000) 0 nil])
([nil nil ((60 . 62)) nil (25768 24692 491228 40000) 0 nil])
([nil nil ((62 . 63)) nil (25768 24692 491225 665000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #(" " 0 1 (face org-indent)))) . -62) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) 63) nil (25768 24692 491221 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 63 . 64) (#("
" 0 1 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -212) (62 . 213)) nil (25768 24692 491203 147000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 62) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1)) nil (25768 24692 491199 329000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 61) (undo-tree-id90 . -1) (undo-tree-id91 . 1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1)) nil (25768 24692 491180 247000) 0 nil])
([nil nil ((61 . 214) (#(" * 
 * *\"I long to accomplish a great and noble task, but it is my chief duty to accomplish small tasks as if they were great and noble.\" - Helen Keller*" 0 1 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent))) 1 3 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent))) 3 4 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent))) 4 5 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)) rear-nonsticky t) 5 6 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)) composition (0 1 [8226]) face org-superstar-item) 6 7 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent))) 7 8 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)) font-lock-multiline t org-emphasis t invisible t) 8 152 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t) 152 153 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)) font-lock-multiline t org-emphasis t invisible t)) . 61) (undo-tree-id29 . -92) (undo-tree-id30 . 149) (undo-tree-id31 . -5) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . 149) (undo-tree-id67 . -92) (undo-tree-id68 . -92) (undo-tree-id69 . -92) (undo-tree-id70 . -92) (undo-tree-id71 . -92) (undo-tree-id72 . -92) (undo-tree-id73 . -92) (undo-tree-id74 . -92) (undo-tree-id75 . -92) (undo-tree-id76 . -92) (undo-tree-id77 . -92) (undo-tree-id78 . -92) (undo-tree-id79 . -92) (undo-tree-id80 . -92) (undo-tree-id81 . -92) (undo-tree-id82 . -92) (undo-tree-id83 . -92) (undo-tree-id84 . -92) (undo-tree-id85 . -92) (undo-tree-id86 . -92) (undo-tree-id87 . -92) (undo-tree-id88 . -92) (undo-tree-id89 . -4) (61 . 65) 149) nil (25768 24692 489880 776000) 0 nil])
([nil nil ((#("*" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -212) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -213) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 214) nil (25768 24692 489760 871000) 0 nil])
([nil nil ((229 . 230) 211) nil (25768 24692 489650 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 221 . 222) (#("
" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -294) (221 . 295) (t 25768 24692 530294 862000)) nil (25768 24719 240136 502000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) rear-nonsticky t)) . 221) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1)) nil (25768 24719 240130 470000) 0 nil])
([nil nil ((293 . 294) 221) nil (25768 24719 240096 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 303 . 304) (#("
" 0 1 (org-fold--spec-org-fold-outline--1154753354247099615 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -563) (303 . 564)) nil (25768 24719 240092 561000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) rear-nonsticky t)) . 303) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1)) nil (25768 24719 240085 759000) 0 nil])
([nil nil ((562 . 563) 303) nil (25768 24719 240019 410000) 0 nil])
([nil nil ((#("show2levels" 0 11 (font-lock-fontified t fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . 48) (undo-tree-id424 . -10) (undo-tree-id425 . -11) (undo-tree-id426 . -11) (t 25768 24719 268656 942000)) nil (25768 24839 591619 985000) 0 nil])
([nil nil ((48 . 52)) nil (25768 24839 591611 30000) 0 nil])
([nil nil ((52 . 55)) nil (25768 24839 591608 953000) 0 nil])
([nil nil ((48 . 52)) nil (25768 24839 591605 880000) 0 nil])
([nil nil ((#("sho" 0 3 (font-lock-fontified t fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . 48) (undo-tree-id280 . -3) (undo-tree-id281 . -2) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -3) 51) nil (25768 24839 591561 731000) 0 nil])
([nil nil ((#("w" 0 1 (font-lock-fontified t fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . 48) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1)) nil (25768 24839 589437 842000) 0 nil])
([nil nil ((#("%?" 0 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -299) (301 . 301) (#("* " 0 2 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 290) (292 . 295) (290 . 301) (#("
" 0 1 (fontified nil)) . 290) (t . 0)) nil (25768 27601 55184 679000) 0 nil])
([nil nil ((298 . 304)) nil (25768 27601 55179 259000) 0 nil])
([nil nil ((#("H" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -299) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("i" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -300) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("s" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -301) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -302) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("i" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -303) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 304) nil (25768 27601 55173 645000) 0 nil])
([nil nil ((299 . 312)) nil (25768 27601 55149 718000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . 312) (313 . 314) 312) nil (25768 27601 55146 915000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -312) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 313) nil (25768 27601 55142 42000) 0 nil])
([nil nil ((312 . 313)) nil (25768 27601 55135 476000) 0 nil])
([nil nil ((313 . 318)) nil (25768 27601 55132 830000) 0 nil])
([nil nil ((#("A" 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -316) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("c" 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -317) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 318) nil (25768 27601 55127 628000) 0 nil])
([nil nil ((316 . 318)) nil (25768 27601 55109 954000) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -316) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("c" 0 1 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -317) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 318) nil (25768 27601 55104 396000) 0 nil])
([nil nil ((316 . 325)) nil (25768 27601 55052 228000) 0 nil])
([nil nil ((325 . 326)) nil (25768 27601 55049 124000) 0 nil])
([nil nil ((326 . 347)) nil (25768 27601 55044 768000) 0 nil])
([nil nil ((347 . 348)) nil (25768 27601 55032 40000) 0 nil])
([nil nil ((nil org-todo-head nil 298 . 312) (nil org-todo-head nil 297 . 298) (nil org-todo-head nil 293 . 297) (nil org-todo-head nil 292 . 293) (nil org-todo-head nil 291 . 292) (nil org-todo-head nil 290 . 291) (292 . 298) (#(" TODO " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 5 (face (org-todo org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 5 6 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 292) (t 25768 27601 73501 279000) (298 . 298) 290 (t 25768 27601 73501 279000)) nil (25768 27619 484165 70000) 0 nil])
([nil nil ((292 . 298) (#(" PROG " 0 1 (face org-level-2 org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 5 (face ((:foreground "red" :weight bold) org-level-2) org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 5 6 (face org-level-2 org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 292) (298 . 298) 290) nil (25768 27619 484154 326000) 0 nil])
([nil nil ((292 . 303) (#(" DONE " 0 1 (face org-level-2 org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 5 (face ((:foreground "gray" :weight bold) org-level-2) org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 5 6 (face org-level-2 org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 292) (298 . 298) 290) nil (25768 27619 486045 48000) 0 nil])
([nil nil ((#("%?" 0 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -363) (365 . 365) (#("* " 0 2 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 354) (356 . 359) (354 . 365) (t . 0)) nil (25768 28003 418789 306000) 0 nil] [nil nil ((#("*" 0 1 (invisible org-superstar-hide face org-hide org-todo-head "TODO" wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 290) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1)) ((290 . 291)) (25768 27619 484136 90000) 0 nil])
([nil nil ((#("** TODO  
" 0 1 (invisible org-superstar-hide face org-hide fontified t) 1 2 (composition (2 1 [9675]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (face org-level-2 fontified t) 3 7 (face (org-todo org-level-2) fontified t) 7 9 (face org-level-2 fontified t) 9 10 (fontified nil)) . 354) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -10) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) 362) nil (25768 28003 418763 543000) 0 nil])
nil
([nil nil ((#("%?" 0 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -625) (627 . 627) (#("* " 0 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) . 622) (624 . 627) (622 . 627) (t . 0)) nil (25768 28654 79045 473000) 0 nil])
([nil nil ((#("** 
" 0 1 (fontified t face org-hide invisible org-superstar-hide) 1 2 (fontified t face (org-superstar-header-bullet org-level-2) composition (0 1 [9675])) 2 3 (fontified t face org-level-2) 3 4 (fontified t)) . 622) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -4) (undo-tree-id3 . -3) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) 624) nil (25768 28654 79027 906000) 0 nil])
([nil nil ((#("%?" 0 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -363) (365 . 365) (#("* " 0 2 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 354) (356 . 359) (354 . 365) (t . 0)) nil (25768 28738 451735 675000) 0 nil])
([nil nil ((#("** TODO  
" 0 1 (invisible org-superstar-hide face org-hide fontified t) 1 2 (face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (face org-level-2 fontified t) 3 7 (face (org-todo org-level-2) fontified t) 7 9 (face org-level-2 fontified t) 9 10 (fontified nil)) . 354) (undo-tree-id0 . -8) (undo-tree-id1 . -10) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8)) nil (25768 28738 451712 653000) 0 nil])
([nil nil ((#("%?" 0 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -625) (627 . 627) (#("* " 0 2 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 622) (624 . 627) (622 . 629) (t . 0)) nil (25768 28786 214065 937000) 0 nil])
([nil nil ((#("**   
" 0 1 (invisible org-superstar-hide face org-hide fontified t) 1 2 (composition (0 1 [9675]) face (org-superstar-header-bullet org-level-2) fontified t) 2 3 (face org-level-2 fontified t) 3 5 (face org-level-2 fontified t) 5 6 (fontified t)) . 622) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -6) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . 3) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) 624) nil (25768 28786 213938 110000) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -363) (365 . 365) (#("* " 0 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) . 354) (356 . 359) (354 . 365) (t . 0)) nil (25768 30099 176306 847000) 0 nil])
([nil nil ((#("** TODO  
" 0 1 (fontified t face org-hide invisible org-superstar-hide) 1 2 (fontified t face (org-superstar-header-bullet org-level-2)) 2 3 (fontified t face org-level-2) 3 7 (fontified t face (org-todo org-level-2)) 7 9 (fontified t face org-level-2) 9 10 (fontified nil)) . 354) (undo-tree-id0 . -8) (undo-tree-id1 . -8) (undo-tree-id2 . -10) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) 362) nil (25768 30099 176291 217000) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -625) (627 . 627) (#("* " 0 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) . 622) (624 . 627) (622 . 629) (t . 0)) nil (25768 30103 175780 225000) 0 nil])
([nil nil ((#("**   
" 0 1 (fontified t face org-hide invisible org-superstar-hide) 1 2 (fontified t face (org-superstar-header-bullet org-level-2)) 2 3 (fontified t face org-level-2) 3 5 (fontified t face org-level-2) 5 6 (fontified t)) . 622) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -6) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) 625) nil (25768 30103 175765 504000) 0 nil])
([nil nil ((353 . 357) (t 25768 30103 209111 242000) 290) nil (25768 30502 288759 815000) 0 nil])
([nil nil ((357 . 363)) nil (25768 30502 288715 578000) 0 nil])
([nil nil ((363 . 367)) nil (25768 30502 288711 705000) 0 nil])
([nil nil ((367 . 368)) nil (25768 30502 288707 865000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -367) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 368) nil (25768 30502 288702 679000) 0 nil])
([nil nil ((367 . 373)) nil (25768 30502 288687 740000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -372) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 373) nil (25768 30502 288681 672000) 0 nil])
([nil nil ((372 . 376)) nil (25768 30502 288604 624000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -375) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 376) nil (25768 30502 288600 28000) 0 nil])
([nil nil ((375 . 383)) nil (25768 30502 288589 678000) 0 nil])
([nil nil ((383 . 387)) nil (25768 30502 288586 211000) 0 nil])
([nil nil ((387 . 392)) nil (25768 30502 288582 717000) 0 nil])
([nil nil ((392 . 395) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . 391) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (392 . 393)) nil (25768 30502 288577 592000) 0 nil])
([nil nil ((395 . 397)) nil (25768 30502 288566 186000) 0 nil])
([nil nil ((397 . 400) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . 396) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (397 . 398)) nil (25768 30502 288561 369000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)))) . -397) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -398) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -399) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 400) nil (25768 30502 288547 66000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -396) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 397) nil (25768 30502 288519 217000) 0 nil])
([nil nil ((396 . 401)) nil (25768 30502 288507 935000) 0 nil])
([nil nil ((401 . 405)) nil (25768 30502 288504 221000) 0 nil])
([nil nil ((405 . 410)) nil (25768 30502 288500 414000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -407) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -408) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -409) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 410) nil (25768 30502 288493 923000) 0 nil])
([nil nil ((407 . 411)) nil (25768 30502 288469 267000) 0 nil])
([nil nil ((411 . 415)) nil (25768 30502 288465 505000) 0 nil])
([nil nil ((415 . 419)) nil (25768 30502 288461 872000) 0 nil])
([nil nil ((419 . 427)) nil (25768 30502 288458 200000) 0 nil])
([nil nil ((427 . 428)) nil (25768 30502 288454 194000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -426) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -427) (undo-tree-id161 . -1) (undo-tree-id162 . -1) 428) nil (25768 30502 288448 407000) 0 nil])
([nil nil ((434 . 437) (423 . 426) (414 . 417) (401 . 404) (390 . 393) (367 . 370) (354 . 357)) nil (25768 30502 288425 658000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -357) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -358) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -359) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 360) nil (25768 30503 407766 682000) 0 nil])
([nil nil ((367 . 368)) nil (25768 30523 709317 586000) 0 nil] [nil nil ((#("   this" 0 7 (fontified t)) . 367) (undo-tree-id101 . -7)) ((367 . 374)) (25768 30502 290536 246000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -367) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -368) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -369) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -370) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) 371) nil (25768 30523 709308 583000) 0 nil])
([nil nil ((#(" is" 0 3 (fontified t)) . 367) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -3)) ((367 . 370)) (25768 30502 287831 97000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -387) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -388) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -389) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) 390) nil (25768 30523 709175 173000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -395) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -396) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -397) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) 398) nil (25768 30523 709107 455000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -405) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -406) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -407) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) 408) nil (25768 30523 706963 744000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -411) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -412) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -413) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) 414) nil (25768 30523 706854 857000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -419) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -420) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -421) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 422) nil (25768 30523 706555 375000) 0 nil])
([nil nil ((#(" * note 1
 * this is somebody
 * that
 * i used
 * to
 * know
 * got ye!
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 3 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 9 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 10 11 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 13 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 17 20 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 20 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 30 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 31 32 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 32 33 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 33 38 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 38 39 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 39 40 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 40 41 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 41 48 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 48 49 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 49 50 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 50 51 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 51 54 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 54 55 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 55 56 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 56 57 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 57 62 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 62 63 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 63 64 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (2 1 [8226]) face org-superstar-item) 64 65 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 65 72 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 72 73 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . 354) (undo-tree-id398 . 8) (undo-tree-id399 . -62) (undo-tree-id400 . -62) (undo-tree-id401 . -10) (undo-tree-id402 . -11) (undo-tree-id403 . -13) (undo-tree-id404 . -13) (undo-tree-id405 . -13) (undo-tree-id406 . -13) (undo-tree-id407 . -13) (undo-tree-id408 . -13) (undo-tree-id409 . -13) (undo-tree-id410 . -13) (undo-tree-id411 . -13) (undo-tree-id412 . -13) (undo-tree-id413 . -13) (undo-tree-id414 . -13) (undo-tree-id415 . -13) (undo-tree-id416 . -13) (undo-tree-id417 . -13) (undo-tree-id418 . -13) (undo-tree-id419 . -13) (undo-tree-id420 . -13) (undo-tree-id421 . -13) (undo-tree-id422 . -13) (undo-tree-id423 . -13) (undo-tree-id424 . -13) (undo-tree-id425 . -13) (undo-tree-id426 . -13) (undo-tree-id427 . -13) (undo-tree-id428 . -13) (undo-tree-id429 . -13) (undo-tree-id430 . -13) (undo-tree-id431 . -33) (undo-tree-id432 . -33) (undo-tree-id433 . -33) (undo-tree-id434 . -33) (undo-tree-id435 . -33) (undo-tree-id436 . -33) (undo-tree-id437 . -33) (undo-tree-id438 . -33) (undo-tree-id439 . -33) (undo-tree-id440 . -33) (undo-tree-id441 . -33) (undo-tree-id442 . -33) (undo-tree-id443 . -33) (undo-tree-id444 . -33) (undo-tree-id445 . -41) (undo-tree-id446 . -41) (undo-tree-id447 . -41) (undo-tree-id448 . -41) (undo-tree-id449 . -41) (undo-tree-id450 . -41) (undo-tree-id451 . -41) (undo-tree-id452 . -41) (undo-tree-id453 . -41) (undo-tree-id454 . -41) (undo-tree-id455 . -41) (undo-tree-id456 . -41) (undo-tree-id457 . -41) (undo-tree-id458 . -41) (undo-tree-id459 . -51) (undo-tree-id460 . -51) (undo-tree-id461 . -51) (undo-tree-id462 . -51) (undo-tree-id463 . -51) (undo-tree-id464 . -51) (undo-tree-id465 . -51) (undo-tree-id466 . -51) (undo-tree-id467 . -51) (undo-tree-id468 . -51) (undo-tree-id469 . -51) (undo-tree-id470 . -51) (undo-tree-id471 . -51) (undo-tree-id472 . -51) (undo-tree-id473 . -57) (undo-tree-id474 . -57) (undo-tree-id475 . -57) (undo-tree-id476 . -57) (undo-tree-id477 . -57) (undo-tree-id478 . -57) (undo-tree-id479 . -57) (undo-tree-id480 . -57) (undo-tree-id481 . -57) (undo-tree-id482 . -57) (undo-tree-id483 . -57) (undo-tree-id484 . -57) (undo-tree-id485 . -57) (undo-tree-id486 . -57) (undo-tree-id487 . -65) (undo-tree-id488 . -65) (undo-tree-id489 . -65) (undo-tree-id490 . -65) (undo-tree-id491 . -65) (undo-tree-id492 . -65) (undo-tree-id493 . -65) (undo-tree-id494 . -65) (undo-tree-id495 . -65) (undo-tree-id496 . -65) (undo-tree-id497 . -65) (undo-tree-id498 . -65) (undo-tree-id499 . -65) (undo-tree-id500 . -65) (undo-tree-id501 . -64) (undo-tree-id502 . -64) (undo-tree-id503 . -64) (undo-tree-id504 . -64) (undo-tree-id505 . -64) (undo-tree-id506 . -64) (undo-tree-id507 . -64) (undo-tree-id508 . -64) (undo-tree-id509 . -64) (undo-tree-id510 . -73) (undo-tree-id511 . -73) (undo-tree-id512 . -73) (undo-tree-id513 . -73) (undo-tree-id514 . -73) (undo-tree-id515 . -73) (undo-tree-id516 . -73) (undo-tree-id517 . -62) (undo-tree-id518 . -62) (undo-tree-id519 . -62) (undo-tree-id520 . -62) (undo-tree-id521 . -62) (undo-tree-id522 . -62) (undo-tree-id523 . -62) (undo-tree-id524 . -73) (undo-tree-id525 . -62) (undo-tree-id526 . -62) (undo-tree-id527 . -62) (undo-tree-id528 . -62) (undo-tree-id529 . -62) (undo-tree-id530 . -62) (undo-tree-id531 . -62) (undo-tree-id532 . -62) (undo-tree-id533 . -62) (undo-tree-id534 . -62) (undo-tree-id535 . -62) (undo-tree-id536 . -62) (undo-tree-id537 . -62) (undo-tree-id538 . -62) (undo-tree-id539 . -62) (undo-tree-id540 . -62) (undo-tree-id541 . -62) (undo-tree-id542 . -54) (undo-tree-id543 . -54) (undo-tree-id544 . -54) (undo-tree-id545 . -54) (undo-tree-id546 . -54) (undo-tree-id547 . -54) (undo-tree-id548 . -54) (undo-tree-id549 . -48) (undo-tree-id550 . -48) (undo-tree-id551 . -48) (undo-tree-id552 . -48) (undo-tree-id553 . -48) (undo-tree-id554 . -48) (undo-tree-id555 . -48) (undo-tree-id556 . -38) (undo-tree-id557 . -38) (undo-tree-id558 . -38) (undo-tree-id559 . -38) (undo-tree-id560 . -38) (undo-tree-id561 . -38) (undo-tree-id562 . -38) (undo-tree-id563 . -30) (undo-tree-id564 . -30) (undo-tree-id565 . -30) (undo-tree-id566 . -30) (undo-tree-id567 . -30) (undo-tree-id568 . -30) (undo-tree-id569 . -30) (undo-tree-id570 . -10) (undo-tree-id571 . -10) (undo-tree-id572 . -10) (undo-tree-id573 . -10) (undo-tree-id574 . -10) (undo-tree-id575 . -10) (undo-tree-id576 . -10) (undo-tree-id577 . -10) (undo-tree-id578 . -10) (undo-tree-id579 . -10) (undo-tree-id580 . -10) (undo-tree-id581 . -10) (undo-tree-id582 . -10) (undo-tree-id583 . -10) (undo-tree-id584 . -30) (undo-tree-id585 . -30) (undo-tree-id586 . -30) (undo-tree-id587 . -30) (undo-tree-id588 . -30) (undo-tree-id589 . -30) (undo-tree-id590 . -30) (undo-tree-id591 . -10) (undo-tree-id592 . -10) (undo-tree-id593 . -10) (undo-tree-id594 . -10) (undo-tree-id595 . -10) (undo-tree-id596 . -10) (undo-tree-id597 . -10) (undo-tree-id598 . -73) (undo-tree-id599 . -73) (undo-tree-id600 . -72) (t 25768 30523 725099 241000)) nil (25768 30557 841271 202000) 0 nil])
([nil nil ((208 . 212) (t 25768 30557 858098 297000) 207) nil (25768 31377 395543 924000) 0 nil])
([nil nil ((210 . 211) (#("   " 0 3 (fontified nil line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 209) (undo-tree-id682 . -3) (undo-tree-id683 . -3) (212 . 213)) nil (25768 31377 395539 773000) 0 nil])
([nil nil ((209 . 220)) nil (25768 31377 395532 977000) 0 nil])
([nil nil ((220 . 222)) nil (25768 31377 395530 627000) 0 nil])
([nil nil ((224 . 225) 223) nil (25768 31377 395528 424000) 0 nil])
([nil nil ((223 . 280)) nil (25768 31377 395526 23000) 0 nil])
([nil nil ((281 . 285) 280) nil (25768 31377 395523 613000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -282) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#("*" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -283) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -284) (undo-tree-id680 . -1) (undo-tree-id681 . -1) 285) nil (25768 31377 395518 906000) 0 nil])
([nil nil ((282 . 336)) nil (25768 31377 395496 876000) 0 nil])
([nil nil ((336 . 337)) nil (25768 31377 395494 558000) 0 nil])
([nil nil ((337 . 388)) nil (25768 31377 395492 295000) 0 nil])
([nil nil ((389 . 392) (nil isearch-open-invisible org-fold-core--isearch-show 388 . 389) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 388 . 389) (nil font-lock-multiline t 388 . 389) (nil face org-link 388 . 389) (nil fontified t 388 . 389) (nil line-prefix #("  " 0 2 (face org-indent)) 388 . 389) (nil wrap-prefix #("  " 0 2 (face org-indent)) 388 . 389) (388 . 389)) nil (25768 31377 395489 181000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -389) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#("*" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -390) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -391) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) 392) nil (25768 31377 398180 183000) 0 nil])
([nil nil ((343 . 346) (285 . 288) (223 . 226)) nil (25768 31387 646903 647000) 0 nil] [nil nil ((266 . 268)) ((#("  " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 1 2 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link)) . 266) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2)) (25768 31377 395212 933000) 0 nil])
([nil nil ((#("* Other Files
 * [[id:0f5d3689-1f7d-4f96-88b5-0463ef375607][Reading List]] 
 * [[id:d943df17-e7c5-4249-b670-185ba29c7a43][Watchlist]]
 * [[id:aa0ad2c9-1926-4070-9d63-947be5c7ae56][Sports]]

" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-superstar-header-bullet org-level-1) composition (1 1 [9673])) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 2 13 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 13 14 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 14 15 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 15 16 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) composition (2 1 [8226]) face org-superstar-item org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 16 17 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 17 59 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 59 60 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 60 71 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 71 72 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 72 73 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 73 74 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:0f5d3689-1f7d-4f96-88b5-0463ef375607" htmlize-link (:uri "id:0f5d3689-1f7d-4f96-88b5-0463ef375607") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 74 75 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 75 76 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 76 77 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 77 78 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) composition (2 1 [8226]) face org-superstar-item org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 78 79 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 79 121 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:d943df17-e7c5-4249-b670-185ba29c7a43" htmlize-link (:uri "id:d943df17-e7c5-4249-b670-185ba29c7a43") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 121 122 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:d943df17-e7c5-4249-b670-185ba29c7a43" htmlize-link (:uri "id:d943df17-e7c5-4249-b670-185ba29c7a43") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 122 130 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:d943df17-e7c5-4249-b670-185ba29c7a43" htmlize-link (:uri "id:d943df17-e7c5-4249-b670-185ba29c7a43") org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 130 131 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:d943df17-e7c5-4249-b670-185ba29c7a43" htmlize-link (:uri "id:d943df17-e7c5-4249-b670-185ba29c7a43") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 131 132 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:d943df17-e7c5-4249-b670-185ba29c7a43" htmlize-link (:uri "id:d943df17-e7c5-4249-b670-185ba29c7a43") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 132 133 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:d943df17-e7c5-4249-b670-185ba29c7a43" htmlize-link (:uri "id:d943df17-e7c5-4249-b670-185ba29c7a43") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 133 134 (isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 134 135 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 135 136 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) composition (2 1 [8226]) face org-superstar-item org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 136 137 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 137 179 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:aa0ad2c9-1926-4070-9d63-947be5c7ae56" htmlize-link (:uri "id:aa0ad2c9-1926-4070-9d63-947be5c7ae56") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 179 180 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:aa0ad2c9-1926-4070-9d63-947be5c7ae56" htmlize-link (:uri "id:aa0ad2c9-1926-4070-9d63-947be5c7ae56") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 180 185 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:aa0ad2c9-1926-4070-9d63-947be5c7ae56" htmlize-link (:uri "id:aa0ad2c9-1926-4070-9d63-947be5c7ae56") org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 185 186 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:aa0ad2c9-1926-4070-9d63-947be5c7ae56" htmlize-link (:uri "id:aa0ad2c9-1926-4070-9d63-947be5c7ae56") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) org-fold--spec-org-link-global org-link org-fold--spec-org-link-description-global org-link-description mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 186 187 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:aa0ad2c9-1926-4070-9d63-947be5c7ae56" htmlize-link (:uri "id:aa0ad2c9-1926-4070-9d63-947be5c7ae56") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 187 188 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary help-echo "LINK: id:aa0ad2c9-1926-4070-9d63-947be5c7ae56" htmlize-link (:uri "id:aa0ad2c9-1926-4070-9d63-947be5c7ae56") org-fold--spec-org-link-global org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 188 189 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) org-fold--spec-org-fold-outline-7048647557926 org-fold-outline isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 189 190 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . 209) (undo-tree-id705 . -7) (undo-tree-id706 . 130) (undo-tree-id707 . -7) (undo-tree-id708 . -7) (undo-tree-id709 . -7) (undo-tree-id710 . -189) (undo-tree-id711 . -189) (undo-tree-id712 . -189) (undo-tree-id713 . -7) (undo-tree-id714 . -186) (undo-tree-id715 . -186) (undo-tree-id716 . -186) (undo-tree-id717 . -186) (undo-tree-id718 . -186) (undo-tree-id719 . -186) (undo-tree-id720 . -186) (undo-tree-id721 . -186) (undo-tree-id722 . -186) (undo-tree-id723 . -186) (undo-tree-id724 . -186) (undo-tree-id725 . -186) (undo-tree-id726 . -186) (undo-tree-id727 . -186) (undo-tree-id728 . -186) (undo-tree-id729 . -186) (undo-tree-id730 . -186) (undo-tree-id731 . -186) (undo-tree-id732 . -186) (undo-tree-id733 . -186) (undo-tree-id734 . -186) (undo-tree-id735 . -186) (undo-tree-id736 . -186) (undo-tree-id737 . -186) (undo-tree-id738 . -186) (undo-tree-id739 . -186) (undo-tree-id740 . -186) (undo-tree-id741 . -186) (undo-tree-id742 . -186) (undo-tree-id743 . -186) (undo-tree-id744 . -186) (undo-tree-id745 . -186) (undo-tree-id746 . -186) (undo-tree-id747 . -186) (undo-tree-id748 . -186) (undo-tree-id749 . -186) (undo-tree-id750 . -186) (undo-tree-id751 . -186) (undo-tree-id752 . -186) (undo-tree-id753 . -186) (undo-tree-id754 . -186) (undo-tree-id755 . -186) (undo-tree-id756 . -186) (undo-tree-id757 . -186) (undo-tree-id758 . -186) (undo-tree-id759 . -186) (undo-tree-id760 . -186) (undo-tree-id761 . -186) (undo-tree-id762 . -186) (undo-tree-id763 . -186) (undo-tree-id764 . -186) (undo-tree-id765 . -128) (undo-tree-id766 . -128) (undo-tree-id767 . -128) (undo-tree-id768 . -128) (undo-tree-id769 . -128) (undo-tree-id770 . -128) (undo-tree-id771 . -128) (undo-tree-id772 . -128) (undo-tree-id773 . -128) (undo-tree-id774 . -128) (undo-tree-id775 . -128) (undo-tree-id776 . -128) (undo-tree-id777 . -128) (undo-tree-id778 . -128) (undo-tree-id779 . -66) (undo-tree-id780 . -66) (undo-tree-id781 . -66) (undo-tree-id782 . -66) (undo-tree-id783 . -66) (undo-tree-id784 . -66) (undo-tree-id785 . -66) (undo-tree-id786 . -7) (undo-tree-id787 . -7) (undo-tree-id788 . -7) (undo-tree-id789 . -7) (undo-tree-id790 . -7) (undo-tree-id791 . -7) (undo-tree-id792 . -7) (undo-tree-id793 . -7) (undo-tree-id794 . -7) (undo-tree-id795 . -7) (undo-tree-id796 . -7) (undo-tree-id797 . -7) (undo-tree-id798 . -7) (undo-tree-id799 . -7) (undo-tree-id800 . -190) (undo-tree-id801 . -7) (undo-tree-id802 . -7) (undo-tree-id803 . -7) (undo-tree-id804 . -7) (undo-tree-id805 . -7) (undo-tree-id806 . -7) (undo-tree-id807 . -7) (undo-tree-id808 . -7) (undo-tree-id809 . -7) (undo-tree-id810 . -7) (undo-tree-id811 . -7) (undo-tree-id812 . -7) (undo-tree-id813 . -190) (undo-tree-id814 . -190) 216 (t 25768 31387 669075 461000)) nil (25768 31401 522041 895000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 623 . 624) (#("
" 0 1 (isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -813) (623 . 814)) nil (25768 31401 521820 11000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix "" wrap-prefix "")) . 209) (undo-tree-id687 . 1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1)) nil (25768 31401 521806 992000) 0 nil])
([nil nil ((#("Other Files" 0 11 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 625) (undo-tree-id977 . -10) (undo-tree-id978 . -11) (undo-tree-id979 . -11) (t 25768 31401 556075 51000)) nil (25768 31449 819908 326000) 0 nil])
([nil nil ((625 . 634)) nil (25768 31449 819898 353000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -630) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (#("g" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -631) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (#("h" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -632) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -633) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) 634) nil (25768 31449 819874 236000) 0 nil])
([nil nil ((630 . 641)) nil (25768 31449 818665 866000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -640) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) 641) nil (25768 31449 818661 462000) 0 nil])
([nil nil ((640 . 645)) nil (25768 31449 818611 612000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -644) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) 645) nil (25768 31449 818605 819000) 0 nil])
([nil nil ((644 . 647)) nil (25768 31449 818547 824000) 0 nil])
([nil nil ((#("%?" 0 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -363) (365 . 365) (#("* " 0 2 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 354) (356 . 359) (354 . 365) (t . 0)) nil (25768 42567 776523 591000) 0 nil])
([nil nil ((362 . 368)) nil (25768 42567 776509 172000) 0 nil])
([nil nil ((#("** TODO Finish 
" 0 1 (invisible org-superstar-hide face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (composition (1 1 [9675]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 7 (face (org-todo org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 7 15 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 15 16 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -354) (undo-tree-id5 . -16) (undo-tree-id6 . -16) (370 . 386) (t 25768 42567 807926 215000)) nil (25768 42602 333115 238000) 0 nil])
([nil nil ((#("** CANCELLED This is a todo
 * Actually 🤓 this is a test hehehe
" 0 1 (invisible org-superstar-hide face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (composition (1 1 [9675]) face (org-superstar-header-bullet org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 12 (face ((:foreground "black" :weight bold) org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 12 13 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 13 27 (face (org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 27 28 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 28 29 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 29 30 (face org-superstar-item composition ((1 . 8226)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 30 63 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-7048647557926 org-fold-outline) 63 64 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 290) (undo-tree-id0 . -64) (undo-tree-id1 . -64) (undo-tree-id2 . -64) (undo-tree-id3 . -64) (undo-tree-id4 . -63)) nil (25768 42602 333106 500000) 0 nil])
([nil nil ((305 . 326)) nil (25768 42602 333041 467000) 0 nil])
([nil nil ((326 . 334)) nil (25768 42602 333028 31000) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -344) (346 . 346) (#("* " 0 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) . 335) (337 . 340) (335 . 346) (t . 0)) nil (25768 48678 625412 822000) 0 nil])
([nil nil ((343 . 348)) nil (25768 48678 625403 325000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -343) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("H" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -344) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -345) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("s" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -346) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -347) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) 348) nil (25768 48678 625348 237000) 0 nil])
([nil nil ((343 . 354)) nil (25768 48678 623535 163000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 354) (355 . 356) 354) nil (25768 48678 623527 753000) 0 nil])
([nil nil ((355 . 369)) nil (25768 48678 623510 150000) 0 nil])
([nil nil ((#("** TODO Another one
 * DJ Khaled!!
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide invisible org-superstar-hide) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition (0 1 [9675])) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 3 7 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-todo org-level-2)) 7 19 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 19 20 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) composition (1 1 [8226]) face org-superstar-item) 22 34 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent))) 34 35 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)))) . -335) (undo-tree-id215 . -35) (t 25768 48678 645758 331000)) nil (25768 48791 191404 349000) 0 nil])
([nil nil ((#("%?" 0 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified nil)) . -344) (346 . 346) (#("* " 0 2 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified nil)) . 335) (337 . 340) (335 . 346) (t . 0)) nil (25768 48809 440069 900000) 0 nil])
([nil current ((#("%?" 0 2 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -354) (356 . 356) (#("* " 0 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)))) . 345) (347 . 350) (345 . 356) (t . 0)) nil (25768 48855 104137 870000) 0 nil])
nil
