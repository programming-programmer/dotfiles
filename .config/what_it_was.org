#+TITLE: Previous Configuration
#+STARTUP: content

* Preface
 * Install Noto Color Emoji (or another emoji font) and install source code pro
   font
 * For installing arch linux (ðŸ¤“), check if a) you're connected to internet, b)
   pacman-keyring is initialized and populated
* Bash
 * In order to source bash at .config location, just link it. I don't know how I
   overlooked this smh

 * profile has environment variables (stuff to add to $PATH and default editor)
  * This has to be linked as the .profile in the home directory in order for it to actually be sourced

* Latex
** Installation: TL;DR Unix(ish)
#+begin_src sh
cd /tmp # working directory of your choice
curl https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz 
zcat < install-tl-unx.tar.gz | tar xf -
cd install-tl-*
perl ./install-tl --no-interaction --scheme=small --no-doc-install --no-src-install # as root or with writable destination
#+end_src

 * Finally, prepend /usr/local/texlive/YYYY/bin/PLATFORM to your PATH,
#+begin_src sh
e.g., /usr/local/texlive/2023/bin/x86_64-linux
#+end_src

 * Changing defaults:
   * The default paper size is a4. If you want the default to be letter, add --paper=letter to the install-tl command.
   * By default, everything is installed (7+GB).
   * To install a smaller scheme, pass --scheme=scheme to install-tl. For example, --scheme=small corresponds to the BasicTeX variant of MacTeX.
   * To omit installation of the documentation resp. source files, pass --no-doc-install --no-src-install to install-tl.
   * To change the main installation directories (rarely needed), add --texdir=/install/dir to the install-tl command. To change the location of the per-user directories (where TEXMFHOME and others will be found), specify --texuserdir=/your/dir.
   * To change anything and everything else, omit the --no-interaction. Then you
     are dropped into an interactive installation menu.
* NVIM
 * Install packer from the website before because it needs it
 * write and source init.lua first then install packers stuff
 * For pyright and clangd (python and c++ respectively) install npm and node
   (I'm not a fulltime c++ coder so no biggie)

* Emacs
 * Make sure init.el's path to config.org is installed
 * use-package making sure is installed doesn't work either so install before

 * If there is an error with org, start emacs with "emacs -q" and install org
   9.x. Then reload emacs

 * To run emacs as daemon, it needs to run with either systemd or an init
   script. OR OR OR!!!... you can add "emacs --daemon" to login when on full linux. Because systemd is unusable on chrombook and not first priority, I
   did not added the init script:

 * The Emacs (Client) .desktop file
   #+begin_src sh
[Desktop Entry]
Name=Emacs (Client)
GenericName=Text Editor
Comment=Edit text
MimeType=text/english;text/plain;text/x-makefile;text/x-c++hdr;text/x-c++src;text/x-chdr;text/x-csrc;text/x-java;text/x-moc;text/x-pascal;text/x-tcl;text/x-tex;application/x-shellscript;text/x-c;text/x-c++;
Exec=emacsclient -c -a "emacs" %F
Icon=emacs
Type=Application
Terminal=false
Categories=Development;TextEditor;Utility;
StartupWMClass=Emacs
   #+end_src
   
* Tmux
 * Install tmux
   #+begin_src sh
tmux source /path/to/tmux/config
   #+end_src
 * Suffer from success
   
* Zathura
 * Install zathura
 * Not much besides that

* Programming Languages
** Rust
 * Install via rustup (requires curl)

   #+begin_src sh
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   #+end_src

** Java
 * Download JDK from reputable source
 * untar/unzip in some direcotry (ex. /usr or /opt)
 * Add to path (should already be in /bash/profile)

** Python
 * Install python3 from package manager

** C/C++
 * Install npm for nvim stuff
 * Comes by default
 * I may be forgetting something... nope. Oh wait! you gotta find out how to install npm urself lol >.<
